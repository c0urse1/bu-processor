[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bu-processor"            # Paket-Name, klein und mit Bindestrich
version = "0.1.0"                # Projekt-Version
description = "BU-Processor-Pipeline für PDF-Parsing und ML-Klassifikation"
readme = "README.md"             # Pfad zu deiner README
license = { file = "LICENSE" }   # Lizenz-Datei
authors = [
  { name = "Nicl", email = "nicl@test.de" }
]
requires-python = ">=3.8"        # Minimale Python-Version

[tool.setuptools.packages.find]
where = ["."]
include = ["bu_processor*"]
exclude = ["tests*", "docs*", "examples*"]
dependencies = [
  "pydantic>=2.0",
  "pydantic-settings>=2.0",      # für BaseSettings in Pydantic 2.x
  "transformers>=4.0",
  "pinecone>=5.0.0",
  "openai>=1.35.0",              # OpenAI API client
  "tiktoken>=0.7.0",             # OpenAI tokenizer
  # PDF Processing
  "PyMuPDF>=1.24.5",
  "PyPDF2>=3.0.1", 
  "pdfplumber>=0.11.0",
  # Vector Search & Retrieval
  "faiss-cpu>=1.7.4",
  "rank-bm25>=0.2.2",
  # Configuration
  "python-dotenv>=1.0.1"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0",                 # Test-Framework
  "pytest-timeout>=2.4.0",       # für timeout-Option im pytest-Config
  "pytest-cov>=4.0",             # Coverage-Messung
  "pre-commit>=3.0",             # Pre-Commit-Hooks
  "black>=22.3.0",               # Code-Formatter
  "isort>=5.0",                  # Import-Organizer
  "flake8>=6.0",                 # Linter
  "bandit>=1.7",                 # Security-Scanner
]

[project.scripts]
bu-train = "bu_processor.training.cli:main"
bu-secure-chat = "bu_processor.pipeline.chatbot_security:main"

[tool.pytest.ini_options]
# Pytest Configuration für BU-Processor Tests
minversion = "8.0"
addopts = [
    "-ra",                     # Show all test results summary
    "-q",                      # Quiet mode
    "--strict-markers",        # Strict marker validation  
    "--strict-config",         # Strict config validation
    "--cov=bu_processor",      # Coverage für bu_processor package
    "--cov-report=term-missing", # Coverage report mit fehlenden Zeilen
    "--cov-report=html:htmlcov", # HTML coverage report
    "--tb=short",              # Kurze Traceback-Anzeige
    "--durations=10",          # Zeige 10 langsamste Tests
    "--timeout=300",           # 5 Minuten Timeout für sehr langsame Tests
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

markers = [
    "unit: Unit tests für einzelne Komponenten",
    "integration: Integration tests für Pipeline-Komponenten", 
    "slow: Langsame Tests (>5s)",
    "external: Tests die externe Services benötigen",
    "mock: Tests mit umfassenden Mocks",
    "pdf: PDF-spezifische Tests",
    "ml: Machine Learning Model Tests",
    "async: Asynchrone Tests",
    "parametrize: Parametrisierte Tests",
    "security: Security-Tests für Input-Validation",
    "performance: Performance-Tests für Security Features",
    "e2e: End-to-End Tests",
]

filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore:.*torch.*:UserWarning",
    "ignore:.*transformers.*:FutureWarning",
]

norecursedirs = [
    ".git",
    ".tox", 
    "dist",
    "build",
    "*.egg",
    "node_modules",
    ".env",
    "venv",
]
